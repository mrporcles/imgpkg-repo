---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: cert-manager.community.tanzu.vmware.com
spec:
  displayName: "cert-manager"
  longDescription: "Provides certificate management provisioning within the cluster"
  shortDescription: "Certificate management"
  iconSVGBase64: 
  providerName: VMware
  maintainers:
    - name: Nicholas Seemiller
  categories:
    - "certificate management"
  supportDescription: "Go to https://cert-manager.io/ for documentation or the #cert-manager channel on Kubernetes slack"
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: cert-manager.community.tanzu.vmware.com.1.7.2
spec:
  refName: cert-manager.community.tanzu.vmware.com
  version: 1.7.2
  releasedAt: 2021-10-29T12:00:00Z
  releaseNotes: "cert-manager 1.7.2 https://github.com/jetstack/cert-manager/releases/tag/v1.7.2"
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/certmanager/cert-manager@sha256:4ddd056a0711b9067b2f4e64d209dc26af869883e1459001a08c7e1bc6cff163
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
  capacityRequirementsDescription: "Varies significantly based on number of Certificate objects"
  valuesSchema:
    openAPIv3:
      title: cert-manager.community.tanzu.vmware.com.1.7.2 values schema
      examples:
        - namespace: cert-manager
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy cert-manager.
          default: cert-manager
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: cert-manager.community.tanzu.vmware.com.1.8.0
spec:
  refName: cert-manager.community.tanzu.vmware.com
  version: 1.8.0
  releasedAt: 2021-10-29T12:00:00Z
  releaseNotes: "cert-manager 1.8.0 https://github.com/jetstack/cert-manager/releases/tag/v1.8.0"
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/cert-manager@sha256:fbecd3ac1915ac8244e5522526fe6039dfb03d78c6b13d76384e78ee077f59fa
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
  capacityRequirementsDescription: "Varies significantly based on number of Certificate objects"
  valuesSchema:
    openAPIv3:
      title: cert-manager.community.tanzu.vmware.com.1.8.0 values schema
      examples:
        - namespace: cert-manager
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy cert-manager.
          default: cert-manager
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: contour.community.tanzu.vmware.com
spec:
  displayName: contour
  shortDescription: "An ingress controller"
  longDescription: "An Envoy-based ingress controller that supports dynamic configuration updates and multi-team ingress delegation. See https://projectcontour.io for more information."
  providerName: VMware
  maintainers:
    - name: Steve Kriss
    - name: Nick Young
    - name: Sunjay Bhatia
    - name: Nicholas Seemiller
  categories:
    - "ingress"
  supportDescription: "Go to https://projectcontour.io for documentation or the #contour channel on Kubernetes slack"
  iconSVGBase64: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzNjAgMzYwIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6IzAwOWNkYzt9PC9zdHlsZT48L2RlZnM+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMjMzLjQ5MzU0LDEzLjYwNzQyQTE3Mi41NDE2NiwxNzIuNTQxNjYsMCwwLDAsMTg5LjYwMSw1LjQzODE0Yy0xOC4xMDk1OSw5OS44NzYtNjguMDE5MzUsMTY5Ljc2MzQyLTExMS4yOTYzNCwyMTMuNTM4QTQzMC42MDM4OCw0MzAuNjAzODgsMCwwLDEsMjcuOTk3LDI2Mi40ODQzN2ExNzQuMTU5ODMsMTc0LjE1OTgzLDAsMCwwLDEzLjk4MDY2LDIxLjQwNzc1YzI3LjIyMi0xNy4yMzI0Niw1Mi4xNzU4Mi0zNi44MDY1OCw3MS42ODAzLTU1LjM4NTc3QzE2MC4yODkzNiwxODQuMDg3NTgsMjE0LjA3NzQ2LDExMy40OTg1NSwyMzMuNDkzNTQsMTMuNjA3NDJaIi8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMjkxLjg4OTM3LDEyMy45NDY3QTM3Mi41NDI4OSwzNzIuNTQyODksMCwwLDAsMzE1LjI5NjE5LDcwLjAzOSwxNzUuMTA3NzIsMTc1LjEwNzcyLDAsMCwwLDI4NC42NjU3Nyw0MC4zMDMyYy0yMy44NDQxMiw5NC4xNzk4Ny03OS40NDQ1NywxNjIuMTA2MTMtMTI3Ljk3OTI4LDIwNS45MDM1OWE0OTcuNjM2NjIsNDk3LjYzNjYyLDAsMCwxLTg5LjYyNDgyLDY0LjI1NDI5LDE3NC43NzM3MywxNzQuNzczNzMsMCwwLDAsMTQuNzE4NywxMS4zNzIzN0E1MTcuMTc5NDksNTE3LjE3OTQ5LDAsMCwwLDE4OC4yNzg2NSwyNTEuMTM2QzIzMi4xOTIxLDIxMy40MDI2NywyNjcuMDUyMTIsMTcwLjYwOTcxLDI5MS44ODkzNywxMjMuOTQ2N1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0yNzcuMTUwODIsMzQuODk4ODFBMTczLjI0MjA2LDE3My4yNDIwNiwwLDAsMCwyMzguODU1OSwxNS40MjU3MkMyMTkuMDU2MSwxMTYuMzIxLDE2NC42ODA0MiwxODcuNjQ2MjUsMTE3LjUyMzI4LDIzMi41NjUxYTQ2NC4xMzgyNyw0NjQuMTM4MjcsMCwwLDEtNzEuODE3NzcsNTYuMDY4MDYsMTc1LjAzNSwxNzUuMDM1LDAsMCwwLDE0LjYyNDM1LDE1LjcyODI1LDQ4NS4yMjExNyw0ODUuMjIxMTcsMCwwLDAsOTAuNjEzMjYtNjQuNTE4OTVDMTk5LjA2NTQyLDE5Ni40MTY4MiwyNTQuMjY4MjYsMTI4Ljc5ODg3LDI3Ny4xNTA4MiwzNC44OTg4MVoiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0zMzYuMTM0MDUsMTMzLjIwMDIxYzIuNTE3MzctNC40ODYxMyw0Ljg5Mjc2LTkuMDA2MTcsNy4yMDMtMTMuNTQxMzdBMTczLjI1NTE3LDE3My4yNTUxNywwLDAsMCwzMjMuNjQxNTQsODEuMjQ4MSwzODYuMDQ3MywzODYuMDQ3MywwLDAsMSwzMDIuMDc2NjYsMTI5LjM2OWMtMjUuNTEzNzgsNDcuOTM0ODctNjEuMjcxMyw5MS44NDgzMi0xMDYuMjc3MTEsMTMwLjUyMDgzQTUzMy40ODk2Niw1MzMuNDg5NjYsMCwwLDEsOTMuMTcyLDMyOS4wMzE2MXE3LjA2MTUxLDQuMTAxNiwxNC41MjQ1OCw3LjU0NGE1NTAuMDcyMDUsNTUwLjA3MjA1LDAsMCwwLDExNy45Ni03NC4xNzkyN0MyNzIuNDI3MSwyMjMuOTYzNTgsMzA5LjU5NjMsMTgwLjQ5NTU0LDMzNi4xMzQwNSwxMzMuMjAwMjFaIi8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTg2LjkzNzg4LDUuMzQwMzZjLTIuMjc3MDctLjA4OTEyLTQuNTU1NDEtLjE3MzkxLTYuODUzOTUtLjE3MzkxLTk1Ljc0NDcsMC0xNzMuNjM5NTksNzcuODk3MDYtMTczLjYzOTU5LDE3My42Mzk2YTE3Mi41MzM5NCwxNzIuNTMzOTQsMCwwLDAsMjAuMjg4MzQsODEuMzMzMjMsNDI3Ljk2NDczLDQyNy45NjQ3MywwLDAsMCw0OS42OTY1MS00My4wMTc5MkMxMTkuMzY5NzMsMTczLjY4Njg4LDE2OC44ODQzOSwxMDQuMzc1MjksMTg2LjkzNzg4LDUuMzQwMzZaIi8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMzQ4Ljc4NjU3LDE0MC4yOTk4N2MtMjcuNDIyNDYsNDguODczMzMtNjUuNzQ5ODUsOTMuNzI0NTMtMTEzLjkxNzgsMTMzLjMwNjQ2QTU3MS4zMjU2Niw1NzEuMzI1NjYsMCwwLDEsMTI2LjExOSwzNDMuODE2NTJhMTcyLjg4MDA3LDE3Mi44ODAwNywwLDAsMCw1My45NjQ4OSw4LjYyOTEzYzk1Ljc0NDM1LDAsMTczLjYzOTYtNzcuODk2ODgsMTczLjYzOTYtMTczLjYzOTZBMTczLjM3NTE4LDE3My4zNzUxOCwwLDAsMCwzNDkuMTkxLDEzOS41NDJDMzQ5LjA1MDg2LDEzOS43OTMyOSwzNDguOTI3NDcsMTQwLjA0ODc1LDM0OC43ODY1NywxNDAuMjk5ODdaIi8+PC9zdmc+
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: contour.community.tanzu.vmware.com.1.19.1
spec:
  refName: contour.community.tanzu.vmware.com
  version: 1.19.1
  releaseNotes: "contour 1.19.1 https://github.com/projectcontour/contour/releases/tag/v1.19.1"
  releasedAt: 2021-10-26T00:00:00Z
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/contour@sha256:be540433d503c870a589570f541eb40482271f3e27ac3563c33d42c1bd3b0647
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
  capacityRequirementsDescription: "Varies significantly based on number of Services, Ingresses/HTTPProxies, etc. A starting point is 128MB RAM and 0.5 CPU for each Contour and Envoy pod, but this can and should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: contour.community.tanzu.vmware.com.1.19.1 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy Contour and Envoy.
          default: projectcontour
        contour:
          type: object
          description: Settings for the Contour component.
          properties:
            configFileContents:
              type: object
              additionalProperties: true
              description: The YAML contents of the Contour config file. See https://projectcontour.io/docs/v1.19.1/configuration/#configuration-file for more information.
            replicas:
              type: integer
              description: How many Contour pod replicas to have.
              default: 2
            useProxyProtocol:
              type: boolean
              description: Whether to enable PROXY protocol for all Envoy listeners.
              default: false
            logLevel:
              type: string
              description: The Contour log level. Valid options are info and debug.
              default: info
        envoy:
          type: object
          description: Settings for the Envoy component.
          properties:
            service:
              type: object
              description: Envoy service settings.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Envoy.
                  default: LoadBalancer
                externalTrafficPolicy:
                  type: string
                  description: The external traffic policy for the Envoy service.
                  default: Local
                loadBalancerIP:
                  type: string
                  description: The desired load balancer IP for the Envoy service.
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: Annotations to set on the Envoy service.
                nodePorts:
                  type: object
                  description: NodePort settings for the Envoy service. If type is not NodePort, these settings are ignored.
                  properties:
                    http:
                      type: integer
                      description: If type == NodePort, the node port number to expose Envoy's HTTP listener on. If not specified, a node port will be auto-assigned by Kubernetes.
                    https:
                      type: integer
                      description: If type == NodePort, the node port number to expose Envoy's HTTPS listener on. If not specified, a node port will be auto-assigned by Kubernetes.
            hostPorts:
              type: object
              description: Host port settings for the Envoy pods.
              properties:
                enable:
                  type: boolean
                  description: Whether to enable host ports. If false, http and https are ignored.
                  default: false
                http:
                  type: integer
                  description: If enable == true, the host port number to expose Envoy's HTTP listener on.
                  default: 80
                https:
                  type: integer
                  description: If enable == true, the host port number to expose Envoy's HTTPS listener on.
                  default: 443
            hostNetwork:
              type: boolean
              description: Whether to enable host networking for the Envoy pods.
              default: false
            terminationGracePeriodSeconds:
              type: integer
              description: The termination grace period, in seconds, for the Envoy pods.
              default: 300
            logLevel:
              type: string
              description: The Envoy log level.
              default: info
        certificates:
          type: object
          description: Settings for the TLS certificates for securing communication between Contour and Envoy.
          properties:
            useCertManager:
              type: boolean
              description: Whether to use cert-manager to provision TLS certificates for securing communication between Contour and Envoy. If false, the upstream Contour certgen job will be used to provision certificates. If true, the cert-manager addon must be installed in the cluster.
              default: false
            duration:
              type: string
              description: If using cert-manager, how long the certificates should be valid for. If useCertManager is false, this field is ignored.
              default: 8760h
            renewBefore:
              type: string
              description: If using cert-manager, how long before expiration the certificates should be renewed. If useCertManager is false, this field is ignored.
              default: 360h
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: contour.community.tanzu.vmware.com.1.20.1
spec:
  refName: contour.community.tanzu.vmware.com
  version: 1.20.1
  releaseNotes: "contour 1.20.1 https://github.com/projectcontour/contour/releases/tag/v1.20.1"
  releasedAt: 2022-02-24T00:00:00Z
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/contour@sha256:0128c3458d57cd637c198b3a6377bb1eca6e23301f27710ac29d9d0ee1c5bd09
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
  capacityRequirementsDescription: "Varies significantly based on number of Services, Ingresses/HTTPProxies, etc. A starting point is 128MB RAM and 0.5 CPU for each Contour and Envoy pod, but this can and should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: contour.community.tanzu.vmware.com.1.20.1 values schema
      properties:
        infrastructureProvider:
          type: string
          description: The underlying infrastructure provider. Options are aws, azure, docker and vsphere.
        namespace:
          type: string
          description: The namespace in which to deploy Contour and Envoy.
          default: projectcontour
        contour:
          type: object
          description: Settings for the Contour component.
          properties:
            configFileContents:
              type: object
              additionalProperties: true
              description: The YAML contents of the Contour config file. See https://projectcontour.io/docs/v1.20.1/configuration/#configuration-file for more information.
            replicas:
              type: integer
              description: How many Contour pod replicas to have.
              default: 2
            useProxyProtocol:
              type: boolean
              description: Whether to enable PROXY protocol for all Envoy listeners.
              default: false
            logLevel:
              type: string
              description: The Contour log level. Valid options are info and debug.
              default: info
        envoy:
          type: object
          description: Settings for the Envoy component.
          properties:
            service:
              type: object
              description: Envoy service settings.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Envoy.
                externalTrafficPolicy:
                  type: string
                  description: The external traffic policy for the Envoy service.
                loadBalancerIP:
                  type: string
                  description: The desired load balancer IP for the Envoy service.
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: Annotations to set on the Envoy service.
                nodePorts:
                  type: object
                  description: NodePort settings for the Envoy service. If type is not NodePort, these settings are ignored.
                  properties:
                    http:
                      type: integer
                      description: If type == NodePort, the node port number to expose Envoy's HTTP listener on. If not specified, a node port will be auto-assigned by Kubernetes.
                    https:
                      type: integer
                      description: If type == NodePort, the node port number to expose Envoy's HTTPS listener on. If not specified, a node port will be auto-assigned by Kubernetes.
                aws:
                  type: object
                  description: AWS-specific settings for the Envoy service. If infrastructure provider is not "aws", these settings are ignored.
                  properties:
                    loadBalancerType:
                      type: string
                      description: The type of AWS load balancer to provision. Options are "classic" and "nlb".
            hostPorts:
              type: object
              description: Host port settings for the Envoy pods.
              properties:
                enable:
                  type: boolean
                  description: Whether to enable host ports. If false, http and https are ignored.
                  default: false
                http:
                  type: integer
                  description: If enable == true, the host port number to expose Envoy's HTTP listener on.
                  default: 80
                https:
                  type: integer
                  description: If enable == true, the host port number to expose Envoy's HTTPS listener on.
                  default: 443
            hostNetwork:
              type: boolean
              description: Whether to enable host networking for the Envoy pods.
              default: false
            terminationGracePeriodSeconds:
              type: integer
              description: The termination grace period, in seconds, for the Envoy pods.
              default: 300
            logLevel:
              type: string
              description: The Envoy log level.
              default: info
        certificates:
          type: object
          description: Settings for the TLS certificates for securing communication between Contour and Envoy.
          properties:
            useCertManager:
              type: boolean
              description: Whether to use cert-manager to provision TLS certificates for securing communication between Contour and Envoy. If false, the upstream Contour certgen job will be used to provision certificates. If true, the cert-manager addon must be installed in the cluster.
              default: false
            duration:
              type: string
              description: If using cert-manager, how long the certificates should be valid for. If useCertManager is false, this field is ignored.
              default: 8760h
            renewBefore:
              type: string
              description: If using cert-manager, how long before expiration the certificates should be renewed. If useCertManager is false, this field is ignored.
              default: 360h
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: external-dns.community.tanzu.vmware.com
spec:
  displayName: "external-dns"
  shortDescription: "This package provides DNS synchronization functionality."
  longDescription: "This package provides functionality to synchronize exposed Kubernetes Services and Ingresses with DNS providers."
  providerName: VMware
  maintainers:
    - name: Edwin Xie
    - name: Christian Ang
    - name: Tyler Schultz
    - name: David McClure
    - name: Aidan Obley
    - name: Nicholas Seemiller
  categories:
    - "dns"
  supportDescription: |
    Support provided by VMware. Documentation is available at
    https://tanzucommunityedition.io/docs/package-readme-external-dns-0.10.0/.
  iconSVGBase64: 
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: external-dns.community.tanzu.vmware.com.0.8.0
spec:
  refName: external-dns.community.tanzu.vmware.com
  version: 0.8.0
  releasedAt: 2021-06-11T18:00:00Z
  releaseNotes: "external-dns 0.8.0 https://github.com/kubernetes-sigs/external-dns/releases/tag/v0.8.0"
  valuesSchema:
    openAPIv3:
      title: external-dns.community.tanzu.vmware.com.0.8.0 values schema
      examples:
      - namespace: tanzu-system-service-discovery
        deployment:
          args:
            - --source=service
            - --txt-owner-id=k8s
            - --domain-filter=k8s.example.org
            - --namespace=tanzu-system-service-discovery
            - --provider=rfc2136
            - --rfc2136-host=100.69.97.77
            - --rfc2136-port=53
            - --rfc2136-zone=k8s.example.org
            - --rfc2136-tsig-secret=MTlQs3NNU=
            - --rfc2136-tsig-secret-alg=hmac-sha256
            - --rfc2136-tsig-keyname=externaldns-key
            - --rfc2136-tsig-axfr
          env: []
          securityContext: {}
          volumeMounts: []
          volumes: []
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy ExternalDNS.
          default: external-dns
          examples:
          - external-dns
        deployment:
          type: object
          description: Deployment related configuration
          properties:
            args:
              type: array
              description: |
                List of arguments passed via command-line to external-dns.  For
                more guidance on configuration options for your desired DNS
                provider, consult the ExternalDNS docs at
                https://github.com/kubernetes-sigs/external-dns#running-externaldns
              items:
                type: string
            env:
              type: array
              description: "List of environment variables to set in the external-dns container."
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.EnvVar"
            securityContext:
              description: "SecurityContext defines the security options the external-dns container should be run with. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
              $ref: "#/definitions/io.k8s.api.core.v1.SecurityContext"
            volumeMounts:
              type: array
              description: "Pod volumes to mount into the external-dns container's filesystem."
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.VolumeMount"
            volumes:
              type: array
              description: "List of volumes that can be mounted by containers belonging to the external-dns pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.Volume"
  capacityRequirementsDescription: "No specific capacity requirements."
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/external-dns@sha256:9dbe4f8744c07f3113bc80d169503299a24f0651c154b671b2ad8430297a5b17
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: external-dns.community.tanzu.vmware.com.0.10.0
spec:
  refName: external-dns.community.tanzu.vmware.com
  version: 0.10.0
  releasedAt: 2021-10-26T18:00:00Z
  releaseNotes: "external-dns 0.10.0 https://github.com/kubernetes-sigs/external-dns/releases/tag/v0.10.0"
  valuesSchema:
    openAPIv3:
      title: external-dns.community.tanzu.vmware.com.0.10.0 values schema
      examples:
      - namespace: tanzu-system-service-discovery
        deployment:
          args:
            - --source=service
            - --txt-owner-id=k8s
            - --domain-filter=k8s.example.org
            - --namespace=tanzu-system-service-discovery
            - --provider=rfc2136
            - --rfc2136-host=100.69.97.77
            - --rfc2136-port=53
            - --rfc2136-zone=k8s.example.org
            - --rfc2136-tsig-secret=MTlQs3NNU=
            - --rfc2136-tsig-secret-alg=hmac-sha256
            - --rfc2136-tsig-keyname=externaldns-key
            - --rfc2136-tsig-axfr
          env: []
          securityContext: {}
          volumeMounts: []
          volumes: []
        serviceaccount:
          annotations:
            key: value
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy ExternalDNS.
          default: external-dns
          examples:
          - external-dns
        deployment:
          type: object
          description: Deployment related configuration
          properties:
            args:
              type: array
              description: |
                List of arguments passed via command-line to external-dns.  For
                more guidance on configuration options for your desired DNS
                provider, consult the ExternalDNS docs at
                https://github.com/kubernetes-sigs/external-dns#running-externaldns
              items:
                type: string
            env:
              type: array
              description: "List of environment variables to set in the external-dns container."
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.EnvVar"
            securityContext:
              description: "SecurityContext defines the security options the external-dns container should be run with. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
              $ref: "#/definitions/io.k8s.api.core.v1.SecurityContext"
            volumeMounts:
              type: array
              description: "Pod volumes to mount into the external-dns container's filesystem."
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.VolumeMount"
            volumes:
              type: array
              description: "List of volumes that can be mounted by containers belonging to the external-dns pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
              items:
                $ref: "#/definitions/io.k8s.api.core.v1.Volume"
        serviceaccount:
          type: object
          description: Service account related configuration
          properties:
            annotations:
              type: object
              description: "Annotations that can be set on the external-dns service account. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/"
              additionalProperties:
                type: string
  capacityRequirementsDescription: "No specific capacity requirements."
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/external-dns@sha256:4684a1b21e2f51904e21cc60907a4199a5a78221555c7a63556e5bba18c1efbf
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: fluent-bit.community.tanzu.vmware.com
spec:
  displayName: "fluent-bit"
  iconSVGBase64: 
  longDescription: "Fluent Bit is an open source Log Processor and Forwarder which allows you to collect any data like metrics and logs from different sources, enrich them with filters and send them to multiple destinations."
  shortDescription: "Fluent Bit is a fast Log Processor and Forwarder"
  providerName: VMware
  maintainers:
    - name: Anil Kodali
    - name: John McBride
    - name: Luke Winikates
  categories:
    - "logging"
    - "observability"
  supportDescription: "The detailed documentation is on https://fluentbit.io/. Support is available from VMware. Refer to the VMware Product Guide for specific support terms."
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: fluent-bit.community.tanzu.vmware.com.1.7.5
spec:
  refName: fluent-bit.community.tanzu.vmware.com
  version: 1.7.5
  releasedAt: 2021-05-13T18:00:00Z
  releaseNotes: "fluent-bit 1.7.5 https://github.com/fluent/fluent-bit/releases/tag/v1.7.5"
  capacityRequirementsDescription: "Varies significantly based on cluster size. This should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: fluent-bit.community.tanzu.vmware.com.1.7.4 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy fluent-bit.
          default: fluent-bit
        fluent_bit:
          type: object
          description: fluent-bit Kubernetes configuration.
          properties:
            daemonset:
              type: object
              description: fluent-bit deployment related configuration
              properties:
                resources:
                  type: object
                  description: fluent-bit containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                  additionalProperties: true
                podAnnotations:
                  type: object
                  description: fluent-bit deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: fluent-bit deployments pod labels
                  additionalProperties:
                    type: string
            config:
              type: object
              description: The fluent-bit configuration. See https://docs.fluentbit.io/manual/administration/configuring-fluent-bit for more information.
              properties:
                service:
                  type: string
                  description: Configuration for Fluent Bit service, as a multiline YAML. See https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/configuration-file#config_section for more information.
                  default: "default fluent-bit service config."
                outputs:
                  type: string
                  description: Configuration for Fluent Bit outputs, as a multiline YAML. See https://docs.fluentbit.io/manual/pipeline/outputs for more information.
                  default: "standard output"
                inputs:
                  type: string
                  description: Configuration for Fluent Bit inputs, as a multiline YAML. See https://docs.fluentbit.io/manual/pipeline/inputs for more information.
                  default: "tail"
                filters:
                  type: string
                  description: Configuration for Fluent Bit filters, as a multiline YAML. See https://docs.fluentbit.io/manual/pipeline/filters/ for more information.
                  default: "default kubernetes filter"
                parsers:
                  type: string
                  description: Configuration for Fluent Bit parsers, as a multiline YAML. See https://docs.fluentbit.io/manual/pipeline/parsers/ for more information.
                  default: "json parser"
                streams:
                  type: string
                  description: Content for Fluent Bit streams file, as a multiline YAML
                  default: null
                plugins:
                  type: string
                  description: Content for Fluent Bit plugins configuration file, as a multiline YAML
                  default: null
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/fluent-bit@sha256:e8c0873ef8e1ea04f32b88afbab64fc4338d0c0536ef2f91b9dd54bee2c59ed7
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: grafana.community.tanzu.vmware.com
spec:
  displayName: "grafana"
  iconSVGBase64: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIwLjEuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSIzNTFweCIgaGVpZ2h0PSIzNjVweCIgdmlld0JveD0iMCAwIDM1MSAzNjUiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDM1MSAzNjU7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCS5zdDB7ZmlsbDp1cmwoI1NWR0lEXzFfKTt9Cjwvc3R5bGU+CjxnIGlkPSJMYXllcl8xXzFfIj4KPC9nPgo8bGluZWFyR3JhZGllbnQgaWQ9IlNWR0lEXzFfIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgeDE9IjE3NS41IiB5MT0iMzAlIiB4Mj0iMTc1LjUiIHkyPSI5OSUiPgoJPHN0b3AgIG9mZnNldD0iMCIgc3R5bGU9InN0b3AtY29sb3I6I0YwNUEyOCIvPgoJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6I0ZCQ0EwQSIvPgo8L2xpbmVhckdyYWRpZW50Pgo8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMzQyLDE2MS4yYy0wLjYtNi4xLTEuNi0xMy4xLTMuNi0yMC45Yy0yLTcuNy01LTE2LjItOS40LTI1Yy00LjQtOC44LTEwLjEtMTcuOS0xNy41LTI2LjgKCWMtMi45LTMuNS02LjEtNi45LTkuNS0xMC4yYzUuMS0yMC4zLTYuMi0zNy45LTYuMi0zNy45Yy0xOS41LTEuMi0zMS45LDYuMS0zNi41LDkuNGMtMC44LTAuMy0xLjUtMC43LTIuMy0xCgljLTMuMy0xLjMtNi43LTIuNi0xMC4zLTMuN2MtMy41LTEuMS03LjEtMi4xLTEwLjgtM2MtMy43LTAuOS03LjQtMS42LTExLjItMi4yYy0wLjctMC4xLTEuMy0wLjItMi0wLjMKCWMtOC41LTI3LjItMzIuOS0zOC42LTMyLjktMzguNmMtMjcuMywxNy4zLTMyLjQsNDEuNS0zMi40LDQxLjVzLTAuMSwwLjUtMC4zLDEuNGMtMS41LDAuNC0zLDAuOS00LjUsMS4zYy0yLjEsMC42LTQuMiwxLjQtNi4yLDIuMgoJYy0yLjEsMC44LTQuMSwxLjYtNi4yLDIuNWMtNC4xLDEuOC04LjIsMy44LTEyLjIsNmMtMy45LDIuMi03LjcsNC42LTExLjQsNy4xYy0wLjUtMC4yLTEtMC40LTEtMC40Yy0zNy44LTE0LjQtNzEuMywyLjktNzEuMywyLjkKCWMtMy4xLDQwLjIsMTUuMSw2NS41LDE4LjcsNzAuMWMtMC45LDIuNS0xLjcsNS0yLjUsNy41Yy0yLjgsOS4xLTQuOSwxOC40LTYuMiwyOC4xYy0wLjIsMS40LTAuNCwyLjgtMC41LDQuMgoJQzE4LjgsMTkyLjcsOC41LDIyOCw4LjUsMjI4YzI5LjEsMzMuNSw2My4xLDM1LjYsNjMuMSwzNS42YzAsMCwwLjEtMC4xLDAuMS0wLjFjNC4zLDcuNyw5LjMsMTUsMTQuOSwyMS45YzIuNCwyLjksNC44LDUuNiw3LjQsOC4zCgljLTEwLjYsMzAuNCwxLjUsNTUuNiwxLjUsNTUuNmMzMi40LDEuMiw1My43LTE0LjIsNTguMi0xNy43YzMuMiwxLjEsNi41LDIuMSw5LjgsMi45YzEwLDIuNiwyMC4yLDQuMSwzMC40LDQuNQoJYzIuNSwwLjEsNS4xLDAuMiw3LjYsMC4xbDEuMiwwbDAuOCwwbDEuNiwwbDEuNi0wLjFsMCwwLjFjMTUuMywyMS44LDQyLjEsMjQuOSw0Mi4xLDI0LjljMTkuMS0yMC4xLDIwLjItNDAuMSwyMC4yLTQ0LjRsMCwwCgljMCwwLDAtMC4xLDAtMC4zYzAtMC40LDAtMC42LDAtMC42bDAsMGMwLTAuMywwLTAuNiwwLTAuOWM0LTIuOCw3LjgtNS44LDExLjQtOS4xYzcuNi02LjksMTQuMy0xNC44LDE5LjktMjMuMwoJYzAuNS0wLjgsMS0xLjYsMS41LTIuNGMyMS42LDEuMiwzNi45LTEzLjQsMzYuOS0xMy40Yy0zLjYtMjIuNS0xNi40LTMzLjUtMTkuMS0zNS42bDAsMGMwLDAtMC4xLTAuMS0wLjMtMC4yCgljLTAuMi0wLjEtMC4yLTAuMi0wLjItMC4yYzAsMCwwLDAsMCwwYy0wLjEtMC4xLTAuMy0wLjItMC41LTAuM2MwLjEtMS40LDAuMi0yLjcsMC4zLTQuMWMwLjItMi40LDAuMi00LjksMC4yLTcuM2wwLTEuOGwwLTAuOQoJbDAtMC41YzAtMC42LDAtMC40LDAtMC42bC0wLjEtMS41bC0wLjEtMmMwLTAuNy0wLjEtMS4zLTAuMi0xLjljLTAuMS0wLjYtMC4xLTEuMy0wLjItMS45bC0wLjItMS45bC0wLjMtMS45CgljLTAuNC0yLjUtMC44LTQuOS0xLjQtNy40Yy0yLjMtOS43LTYuMS0xOC45LTExLTI3LjJjLTUtOC4zLTExLjItMTUuNi0xOC4zLTIxLjhjLTctNi4yLTE0LjktMTEuMi0yMy4xLTE0LjkKCWMtOC4zLTMuNy0xNi45LTYuMS0yNS41LTcuMmMtNC4zLTAuNi04LjYtMC44LTEyLjktMC43bC0xLjYsMGwtMC40LDBjLTAuMSwwLTAuNiwwLTAuNSwwbC0wLjcsMGwtMS42LDAuMWMtMC42LDAtMS4yLDAuMS0xLjcsMC4xCgljLTIuMiwwLjItNC40LDAuNS02LjUsMC45Yy04LjYsMS42LTE2LjcsNC43LTIzLjgsOWMtNy4xLDQuMy0xMy4zLDkuNi0xOC4zLDE1LjZjLTUsNi04LjksMTIuNy0xMS42LDE5LjZjLTIuNyw2LjktNC4yLDE0LjEtNC42LDIxCgljLTAuMSwxLjctMC4xLDMuNS0wLjEsNS4yYzAsMC40LDAsMC45LDAsMS4zbDAuMSwxLjRjMC4xLDAuOCwwLjEsMS43LDAuMiwyLjVjMC4zLDMuNSwxLDYuOSwxLjksMTAuMWMxLjksNi41LDQuOSwxMi40LDguNiwxNy40CgljMy43LDUsOC4yLDkuMSwxMi45LDEyLjRjNC43LDMuMiw5LjgsNS41LDE0LjgsN2M1LDEuNSwxMCwyLjEsMTQuNywyLjFjMC42LDAsMS4yLDAsMS43LDBjMC4zLDAsMC42LDAsMC45LDBjMC4zLDAsMC42LDAsMC45LTAuMQoJYzAuNSwwLDEtMC4xLDEuNS0wLjFjMC4xLDAsMC4zLDAsMC40LTAuMWwwLjUtMC4xYzAuMywwLDAuNi0wLjEsMC45LTAuMWMwLjYtMC4xLDEuMS0wLjIsMS43LTAuM2MwLjYtMC4xLDEuMS0wLjIsMS42LTAuNAoJYzEuMS0wLjIsMi4xLTAuNiwzLjEtMC45YzItMC43LDQtMS41LDUuNy0yLjRjMS44LTAuOSwzLjQtMiw1LTNjMC40LTAuMywwLjktMC42LDEuMy0xYzEuNi0xLjMsMS45LTMuNywwLjYtNS4zCgljLTEuMS0xLjQtMy4xLTEuOC00LjctMC45Yy0wLjQsMC4yLTAuOCwwLjQtMS4yLDAuNmMtMS40LDAuNy0yLjgsMS4zLTQuMywxLjhjLTEuNSwwLjUtMy4xLDAuOS00LjcsMS4yYy0wLjgsMC4xLTEuNiwwLjItMi41LDAuMwoJYy0wLjQsMC0wLjgsMC4xLTEuMywwLjFjLTAuNCwwLTAuOSwwLTEuMiwwYy0wLjQsMC0wLjgsMC0xLjIsMGMtMC41LDAtMSwwLTEuNS0wLjFjMCwwLTAuMywwLTAuMSwwbC0wLjIsMGwtMC4zLDAKCWMtMC4yLDAtMC41LDAtMC43LTAuMWMtMC41LTAuMS0wLjktMC4xLTEuNC0wLjJjLTMuNy0wLjUtNy40LTEuNi0xMC45LTMuMmMtMy42LTEuNi03LTMuOC0xMC4xLTYuNmMtMy4xLTIuOC01LjgtNi4xLTcuOS05LjkKCWMtMi4xLTMuOC0zLjYtOC00LjMtMTIuNGMtMC4zLTIuMi0wLjUtNC41LTAuNC02LjdjMC0wLjYsMC4xLTEuMiwwLjEtMS44YzAsMC4yLDAtMC4xLDAtMC4xbDAtMC4ybDAtMC41YzAtMC4zLDAuMS0wLjYsMC4xLTAuOQoJYzAuMS0xLjIsMC4zLTIuNCwwLjUtMy42YzEuNy05LjYsNi41LTE5LDEzLjktMjYuMWMxLjktMS44LDMuOS0zLjQsNi00LjljMi4xLTEuNSw0LjQtMi44LDYuOC0zLjljMi40LTEuMSw0LjgtMiw3LjQtMi43CgljMi41LTAuNyw1LjEtMS4xLDcuOC0xLjRjMS4zLTAuMSwyLjYtMC4yLDQtMC4yYzAuNCwwLDAuNiwwLDAuOSwwbDEuMSwwbDAuNywwYzAuMywwLDAsMCwwLjEsMGwwLjMsMGwxLjEsMC4xCgljMi45LDAuMiw1LjcsMC42LDguNSwxLjNjNS42LDEuMiwxMS4xLDMuMywxNi4yLDYuMWMxMC4yLDUuNywxOC45LDE0LjUsMjQuMiwyNS4xYzIuNyw1LjMsNC42LDExLDUuNSwxNi45YzAuMiwxLjUsMC40LDMsMC41LDQuNQoJbDAuMSwxLjFsMC4xLDEuMWMwLDAuNCwwLDAuOCwwLDEuMWMwLDAuNCwwLDAuOCwwLDEuMWwwLDFsMCwxLjFjMCwwLjctMC4xLDEuOS0wLjEsMi42Yy0wLjEsMS42LTAuMywzLjMtMC41LDQuOQoJYy0wLjIsMS42LTAuNSwzLjItMC44LDQuOGMtMC4zLDEuNi0wLjcsMy4yLTEuMSw0LjdjLTAuOCwzLjEtMS44LDYuMi0zLDkuM2MtMi40LDYtNS42LDExLjgtOS40LDE3LjEKCWMtNy43LDEwLjYtMTguMiwxOS4yLTMwLjIsMjQuN2MtNiwyLjctMTIuMyw0LjctMTguOCw1LjdjLTMuMiwwLjYtNi41LDAuOS05LjgsMWwtMC42LDBsLTAuNSwwbC0xLjEsMGwtMS42LDBsLTAuOCwwCgljMC40LDAtMC4xLDAtMC4xLDBsLTAuMywwYy0xLjgsMC0zLjUtMC4xLTUuMy0wLjNjLTctMC41LTEzLjktMS44LTIwLjctMy43Yy02LjctMS45LTEzLjItNC42LTE5LjQtNy44CgljLTEyLjMtNi42LTIzLjQtMTUuNi0zMi0yNi41Yy00LjMtNS40LTguMS0xMS4zLTExLjItMTcuNGMtMy4xLTYuMS01LjYtMTIuNi03LjQtMTkuMWMtMS44LTYuNi0yLjktMTMuMy0zLjQtMjAuMWwtMC4xLTEuM2wwLTAuMwoJbDAtMC4zbDAtMC42bDAtMS4xbDAtMC4zbDAtMC40bDAtMC44bDAtMS42bDAtMC4zYzAsMCwwLDAuMSwwLTAuMWwwLTAuNmMwLTAuOCwwLTEuNywwLTIuNWMwLjEtMy4zLDAuNC02LjgsMC44LTEwLjIKCWMwLjQtMy40LDEtNi45LDEuNy0xMC4zYzAuNy0zLjQsMS41LTYuOCwyLjUtMTAuMmMxLjktNi43LDQuMy0xMy4yLDcuMS0xOS4zYzUuNy0xMi4yLDEzLjEtMjMuMSwyMi0zMS44YzIuMi0yLjIsNC41LTQuMiw2LjktNi4yCgljMi40LTEuOSw0LjktMy43LDcuNS01LjRjMi41LTEuNyw1LjItMy4yLDcuOS00LjZjMS4zLTAuNywyLjctMS40LDQuMS0yYzAuNy0wLjMsMS40LTAuNiwyLjEtMC45YzAuNy0wLjMsMS40LTAuNiwyLjEtMC45CgljMi44LTEuMiw1LjctMi4yLDguNy0zLjFjMC43LTAuMiwxLjUtMC40LDIuMi0wLjdjMC43LTAuMiwxLjUtMC40LDIuMi0wLjZjMS41LTAuNCwzLTAuOCw0LjUtMS4xYzAuNy0wLjIsMS41LTAuMywyLjMtMC41CgljMC44LTAuMiwxLjUtMC4zLDIuMy0wLjVjMC44LTAuMSwxLjUtMC4zLDIuMy0wLjRsMS4xLTAuMmwxLjItMC4yYzAuOC0wLjEsMS41LTAuMiwyLjMtMC4zYzAuOS0wLjEsMS43LTAuMiwyLjYtMC4zCgljMC43LTAuMSwxLjktMC4yLDIuNi0wLjNjMC41LTAuMSwxLjEtMC4xLDEuNi0wLjJsMS4xLTAuMWwwLjUtMC4xbDAuNiwwYzAuOS0wLjEsMS43LTAuMSwyLjYtMC4ybDEuMy0wLjFjMCwwLDAuNSwwLDAuMSwwbDAuMywwCglsMC42LDBjMC43LDAsMS41LTAuMSwyLjItMC4xYzIuOS0wLjEsNS45LTAuMSw4LjgsMGM1LjgsMC4yLDExLjUsMC45LDE3LDEuOWMxMS4xLDIuMSwyMS41LDUuNiwzMSwxMC4zCgljOS41LDQuNiwxNy45LDEwLjMsMjUuMywxNi41YzAuNSwwLjQsMC45LDAuOCwxLjQsMS4yYzAuNCwwLjQsMC45LDAuOCwxLjMsMS4yYzAuOSwwLjgsMS43LDEuNiwyLjYsMi40YzAuOSwwLjgsMS43LDEuNiwyLjUsMi40CgljMC44LDAuOCwxLjYsMS42LDIuNCwyLjVjMy4xLDMuMyw2LDYuNiw4LjYsMTBjNS4yLDYuNyw5LjQsMTMuNSwxMi43LDE5LjljMC4yLDAuNCwwLjQsMC44LDAuNiwxLjJjMC4yLDAuNCwwLjQsMC44LDAuNiwxLjIKCWMwLjQsMC44LDAuOCwxLjYsMS4xLDIuNGMwLjQsMC44LDAuNywxLjUsMS4xLDIuM2MwLjMsMC44LDAuNywxLjUsMSwyLjNjMS4yLDMsMi40LDUuOSwzLjMsOC42YzEuNSw0LjQsMi42LDguMywzLjUsMTEuNwoJYzAuMywxLjQsMS42LDIuMywzLDIuMWMxLjUtMC4xLDIuNi0xLjMsMi42LTIuOEMzNDIuNiwxNzAuNCwzNDIuNSwxNjYuMSwzNDIsMTYxLjJ6Ii8+Cjwvc3ZnPgo=
  longDescription: "Visualization and analytics software"
  shortDescription: "Visualization and analytics software"
  providerName: VMware
  maintainers:
  - name: Guanpeng Gao
  categories:
    - "monitoring"
    - "observability"
  supportDescription: "The detailed documentation is on https://grafana.com/.  Support is available from VMware. Refer to the VMware Product Guide for specific support terms. "
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: grafana.community.tanzu.vmware.com.7.5.7-1
spec:
  refName: grafana.community.tanzu.vmware.com
  version: 7.5.7-1
  releasedAt: 2021-05-19T18:00:00Z
  releaseNotes: "grafana 7.5.7-1 https://github.com/grafana/grafana/releases/tag/v7.5.7"
  capacityRequirementsDescription: "Varies significantly based on cluster size. A starting point is 6GB RAM and 1 CPU, but this should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: grafana.community.tanzu.vmware.com.7.5.7 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy Grafana.
          default: grafana
        grafana:
          type: object
          description: Grafana Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: Grafana Deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of grafana replicas.
                  default: 1
                containers:
                  type: object
                  description: Grafana container configuration.
                  properties:
                    resources:
                      type: object
                      description: Grafana containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: Grafana deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: Grafana deployments pod labels
                  additionalProperties:
                    type: string
                k8sSidecar:
                  type: object
                  description: k8s-sidecar related configuration.
                  containers:
                    type: object
                    description: k8s-sidecar container configuration.
                    properties:
                      resources:
                        type: object
                        description: k8s-sidecar containers resource requirements (io.k8s.api.core.v1.ResourceRequirements)
                        additionalProperties: true
            service:
              type: object
              description: Grafana service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Grafana. (For vSphere set this to NodePort, For others set this to LoadBalancer)
                  default: LoadBalancer
                port:
                  type: integer
                  description: The ports that are exposed by Grafana service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Grafana pods.
                  default: 3000
                annotations:
                  type: object
                  description: Grafana service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: Grafana service pod labels
                  additionalProperties:
                    type: string
            config:
              type: object
              description: Grafana configuration.
              properties:
                grafana_ini:
                  type: object
                  description: The contents of the Grafana config file. See https://grafana.com/docs/grafana/latest/administration/configuration/ for more information.
                  default: "See default values file"
                datasource_yaml:
                  type: object
                  description: The YAML contents of the Grafana datasource config file. See https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-config-file for more information.
                  default: "Includes default prometheus package as datasource."
                dashboardProvider_yaml:
                  type: object
                  description: The YAML contents of the Grafana dashboard provider file. See https://grafana.com/docs/grafana/latest/administration/provisioning/#dashboards for more information.
                  default: "See default values file"
            pvc:
              type: object
              description: Grafana's PVC configuration
              properties:
                annotations:
                  type: object
                  description: Grafana's persistent volume claim annotations
                  additionalProperties:
                    type: string
                storageClassName:
                  type: string
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: null
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for persistent volume claim.
                  default: "2Gi"
            secret:
              type: object
              description: Grafana user access related configuration.
              properties:
                type:
                  type: string
                  description: The Secret Type (io.k8s.api.core.v1.Secret.type)
                  default: "Opaque"
                admin_user:
                  type: string
                  description: Username to access Grafana.
                  default: admin
                admin_password:
                  type: string
                  description: Password to access Grafana. By default is null and grafana defaults this to "admin"
                  default: admin
        ingress:
          type: object
          description: Grafana Ingress configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to enable Grafana Ingress. Note that this requires contour.
              default: true
            virtual_host_fqdn:
              type: string
              description: Hostname for accessing grafana.
              default: "grafana.system.tanzu"
            prefix:
              type: string
              description: Path prefix for Grafana.
              default: "/"
            servicePort:
              type: integer
              description: Grafana service port to proxy traffic to.
              default: 80
            tlsCertificate:
              type: object
              description: Grafana Ingress TLS certificate configuration. If skipped, a cert-manager cert will be issued and the cert-manager package must be installed on your cluster.
              properties:
                tls.crt:
                  type: string
                  description: Optional cert for ingress if you want to use your own TLS cert. A self signed cert is generated by default. Note that tls.crt is a key and not nested.
                  default: null
                tls.key:
                  type: string
                  description: Optional cert private key for ingress if you want to use your own TLS cert. Note that tls.key is a key and not nested.
                  default: null
                ca.crt:
                  type: string
                  description: Optional CA certificate. Note that ca.crt is a key and not nested.
                  default: null
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/grafana@sha256:041d84a24c6faa3918ed3902643aec193cab2acec4d14c1035d7d29bfc9bc5c6
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: grafana.community.tanzu.vmware.com.7.5.11
spec:
  refName: grafana.community.tanzu.vmware.com
  version: 7.5.11
  releasedAt: 2021-05-19T18:00:00Z
  releaseNotes: "grafana 7.5.11 https://github.com/grafana/grafana/releases/tag/v7.5.11"
  capacityRequirementsDescription: "Varies significantly based on cluster size. A starting point is 6GB RAM and 1 CPU, but this should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: grafana.community.tanzu.vmware.com.7.5.11 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy Grafana.
          default: grafana
        grafana:
          type: object
          description: Grafana Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: Grafana Deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of grafana replicas.
                  default: 1
                containers:
                  type: object
                  description: Grafana container configuration.
                  properties:
                    resources:
                      type: object
                      description: Grafana containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: Grafana deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: Grafana deployments pod labels
                  additionalProperties:
                    type: string
                k8sSidecar:
                  type: object
                  description: k8s-sidecar related configuration.
                  containers:
                    type: object
                    description: k8s-sidecar container configuration.
                    properties:
                      resources:
                        type: object
                        description: k8s-sidecar containers resource requirements (io.k8s.api.core.v1.ResourceRequirements)
                        additionalProperties: true
            service:
              type: object
              description: Grafana service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Grafana. (For vSphere set this to NodePort, For others set this to LoadBalancer)
                  default: LoadBalancer
                port:
                  type: integer
                  description: The ports that are exposed by Grafana service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Grafana pods.
                  default: 3000
                annotations:
                  type: object
                  description: Grafana service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: Grafana service pod labels
                  additionalProperties:
                    type: string
            config:
              type: object
              description: Grafana configuration.
              properties:
                grafana_ini:
                  type: object
                  description: The contents of the Grafana config file. See https://grafana.com/docs/grafana/latest/administration/configuration/ for more information.
                  default: "See default values file"
                datasource_yaml:
                  type: object
                  description: The YAML contents of the Grafana datasource config file. See https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-config-file for more information.
                  default: "Includes default prometheus package as datasource."
                dashboardProvider_yaml:
                  type: object
                  description: The YAML contents of the Grafana dashboard provider file. See https://grafana.com/docs/grafana/latest/administration/provisioning/#dashboards for more information.
                  default: "See default values file"
            pvc:
              type: object
              description: Grafana's PVC configuration
              properties:
                annotations:
                  type: object
                  description: Grafana's persistent volume claim annotations
                  additionalProperties:
                    type: string
                storageClassName:
                  type: string
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: null
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for persistent volume claim.
                  default: "2Gi"
            secret:
              type: object
              description: Grafana user access related configuration.
              properties:
                type:
                  type: string
                  description: The Secret Type (io.k8s.api.core.v1.Secret.type)
                  default: "Opaque"
                admin_user:
                  type: string
                  description: Username to access Grafana.
                  default: admin
                admin_password:
                  type: string
                  description: Password to access Grafana. By default is null and grafana defaults this to "admin"
                  default: admin
        ingress:
          type: object
          description: Grafana Ingress configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to enable Grafana Ingress. Note that this requires contour.
              default: true
            virtual_host_fqdn:
              type: string
              description: Hostname for accessing grafana.
              default: "grafana.system.tanzu"
            prefix:
              type: string
              description: Path prefix for Grafana.
              default: "/"
            servicePort:
              type: integer
              description: Grafana service port to proxy traffic to.
              default: 80
            tlsCertificate:
              type: object
              description: Grafana Ingress TLS certificate configuration. If skipped, a cert-manager cert will be issued and the cert-manager package must be installed on your cluster.
              properties:
                tls.crt:
                  type: string
                  description: Optional cert for ingress if you want to use your own TLS cert. A self signed cert is generated by default. Note that tls.crt is a key and not nested.
                  default: null
                tls.key:
                  type: string
                  description: Optional cert private key for ingress if you want to use your own TLS cert. Note that tls.key is a key and not nested.
                  default: null
                ca.crt:
                  type: string
                  description: Optional CA certificate. Note that ca.crt is a key and not nested.
                  default: null
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/grafana@sha256:84d1c7b08c7e36ee45f59d502680ae97ce0d243fe10e2a05c7ff6ec8edefef6b
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: harbor.community.tanzu.vmware.com
spec:
  displayName: "harbor"
  iconSVGBase64: 
  longDescription: "Harbor is an open source trusted cloud native registry project that stores, signs, and scans content. Harbor extends the open source Docker Distribution by adding the functionalities usually required by users such as security, identity and management."
  shortDescription: "OCI Registry"
  providerName: VMware
  maintainers:
    - name: He Weiwei
    - name: Daojun Zhang
    - name: Miner Yang
    - name: Shengwen Yu
  categories:
    - "OCI registry"
  supportDescription: https://goharbor.io
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: harbor.community.tanzu.vmware.com.2.3.3
spec:
  refName: harbor.community.tanzu.vmware.com
  version: 2.3.3
  releasedAt: 2021-09-28T06:05:00Z
  releaseNotes: "harbor 2.3.3 https://github.com/goharbor/harbor/releases/tag/v2.3.3"
  licenses:
    - "Apache 2.0"
  valuesSchema:
    openAPIv3:
      title: harbor.community.tanzu.vmware.com.2.3.3 values schema
      required:
        - harborAdminPassword
        - secretKey
      properties:
        namespace:
          type: string
          description: The namespace to install Harbor.
          default: harbor
        hostname:
          type: string
          description: The FQDN for accessing Harbor admin UI and Registry service.
          default: harbor.yourdomain.com
        port:
          type: object
          description: Port related configuration.
          properties:
            https:
              type: integer
              description: The network port of the Envoy service in Contour or other Ingress Controller.
              default: 443
        logLevel:
          type: string
          description: The log level of core, exporter, jobservice, registry.
          default: info
          enum:
            - debug
            - info
            - warning
            - error
            - fatal
        tlsCertificate:
          type: object
          description: The tls certificate for the harbor FQDN.
          required:
            - tls.crt
            - tls.key
            - ca.crt
          properties:
            tls.crt:
              type: string
              description: The certificate. Note that tls.crt is a key and not nested.
            tls.key:
              type: string
              description: The private key. Note that tls.key is a key and not nested.
            ca.crt:
              type: string
              description: The certificate of CA, this enables the download, link on portal to download the certificate of CA. Note that ca.crt is a key and not nested.
        tlsCertificateSecretName:
          type: string
          description: The name of the secret if you want to use your own TLS certificate for harbor FQDN, which contains keys named "tls.crt" and "tls.key".
        enableContourHttpProxy:
          type: boolean
          description: Use contour http proxy instead of the ingress when it's true.
          default: true
        contourHttpProxy:
          type: object
          description: The timeout policy configuration for httpproxy.
          properties:
            timeout:
              type: string
              description: Timeout for receiving a response from the server after processing a request from client.
            idleTimeout:
              type: string
              description: Timeout for how long the proxy should wait while there is no activity during single request/response (for HTTP/1.1) or stream (for HTTP/2).
        harborAdminPassword:
          type: string
          description: The initial password of Harbor admin.
        secretKey:
          type: string
          description: The secret key used for encryption. Must be a string of 16 chars.
        database:
          type: object
          description: Database component related configuration.
          required:
            - password
          properties:
            password:
              type: string
              description: The initial password of the postgres database.
            shmSizeLimit:
              type: integer
              description: The initial value of shmSizeLimit
            maxIdleConns:
              type: integer
              description: The initial value of maxIdleConns
            maxOpenConns:
              type: integer
              description: The initial value of maxOpenConns
        exporter:
          type: object
          description: The configuration related to exporter.
          properties:
            cacheDuration:
              type: integer
              description: The initial value of cacheDuration.
        core:
          type: object
          description: Core component related configuration.
          required:
            - secret
            - xsrfKey
          properties:
            replicas:
              type: integer
              description: The replicas for the core component.
              default: 1
            secret:
              type: string
              description: Secret is used when core server communicates with other components.
            xsrfKey:
              type: string
              description: The XSRF key. Must be a string of 32 chars.
        jobservice:
          type: object
          description: Jobservice component related configuration.
          required:
            - secret
          properties:
            replicas:
              type: integer
              description: The replicas for the jobservice component.
              default: 1
            secret:
              type: string
              description: Secret is used when job service communicates with other components.
        registry:
          type: object
          description: Registry component related configuration.
          required:
            - secret
          properties:
            replicas:
              type: integer
              description: The replicas for the registry component.
              default: 1
            secret:
              type: string
              description: Secret is used to secure the upload state from client and registry storage backend.
        notary:
          type: object
          description: Notary component related configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to install Notary
              default: true
        trivy:
          type: object
          description: Trivy component related configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to install Trivy scanner.
              default: true
            replicas:
              type: integer
              description: The replicas for the trivy component.
              default: 1
            gitHubToken:
              type: string
              description: the GitHub access token to download Trivy DB.
              default: ""
            skipUpdate:
              type: boolean
              description: The flag to disable Trivy DB downloads from GitHub.
              default: false
        persistence:
          type: object
          description: |-
            The persistence is always enabled and a default StorageClass
            is needed in the k8s cluster to provision volumes dynamically.
            Specify another StorageClass in the "storageClass" or set "existingClaim"
            if you have already existing persistent volumes to use

            For storing images and charts, you can also use "azure", "gcs", "s3",
            "swift" or "oss". Set it in the "imageChartStorage" section
          properties:
            persistentVolumeClaim:
              type: object
              description: PersistentVolumeClaim related configuration.
              properties:
                registry:
                  type: object
                  description: PersistentVolumeClaim related configuration for registry component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 10Gi
                jobservice:
                  type: object
                  description: PersistentVolumeClaim related configuration for jobservice component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                database:
                  type: object
                  description: PersistentVolumeClaim related configuration for database component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                redis:
                  type: object
                  description: PersistentVolumeClaim related configuration for redis component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                trivy:
                  type: object
                  description: PersistentVolumeClaim related configuration for redis component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 5Gi
            imageChartStorage:
              type: object
              description: |-
                Define which storage backend is used for registry and chartmuseum to store
                images and charts. Refer to
                https://github.com/docker/distribution/blob/master/docs/configuration.md#storage
                for the detail.
              properties:
                disableredirect:
                  type: boolean
                  description: |-
                    Specify whether to disable `redirect` for images and chart storage, for
                    backends which not supported it (such as using minio for `s3` storage type), please disable
                    it. To disable redirects, simply set `disableredirect` to `true` instead.
                    Refer to
                    https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect
                    for the detail.
                  default: false
                caBundleSecretName:
                  type: string
                  description: |-
                    Specify the "caBundleSecretName" if the storage service uses a self-signed certificate.
                    The secret must contain keys named "ca.crt" which will be injected into the trust store
                    of registry's and chartmuseum's containers.
                  default: ""
                "type":
                  type: string
                  description: |-
                    Specify the type of storage: "filesystem", "azure", "gcs", "s3", "swift",
                    "oss" and fill the information needed in the corresponding section. The type
                    must be "filesystem" if you want to use persistent volumes for registry
                    and chartmuseum
                  default: filesystem
                filesystem:
                  type: object
                  description: Filesystem storage related configuration.
                  properties:
                    rootdirectory:
                      type: string
                      description: The rootdirectory in filesystem.
                      default: /storage
                    maxthreads:
                      type: integer
                      description: Max threads for filesystem.
                      default: 100
                azure:
                  type: object
                  description: Azure storage related configuration.
                  required:
                    - accountname
                    - accountkey
                    - container
                  properties:
                    accountname:
                      type: string
                      description: Account name of azure storage.
                      default: accountname
                    accountkey:
                      type: string
                      description: Account key of azure storage.
                      default: base64encodedaccountkey
                    container:
                      type: string
                      description: Container name of azure storage.
                      default: containername
                    realm:
                      type: string
                      description: Realm for azure storage.
                      default: core.windows.net
                gcs:
                  type: object
                  required:
                    - bucket
                    - encodedkey
                  properties:
                    bucket:
                      type: string
                      description: Bucket name of gcs.
                      default: bucketname
                    encodedkey:
                      type: string
                      description: The base64 encoded json file which contains the key
                      default: base64-encoded-json-key-file
                    rootdirectory:
                      type: string
                      description: The rootdirectory in gcs.
                      default: null
                    chunksize:
                      type: integer
                      description: Check size for gcs.
                      default: 5242880
                s3:
                  type: object
                  required:
                    - region
                    - bucket
                  properties:
                    region:
                      type: string
                      description: Region of s3.
                      default: us-west-1
                    bucket:
                      type: string
                      description: Bucket name of s3.
                      default: bucketname
                    accesskey:
                      type: string
                      description: Access key of s3.
                      default: null
                    secretkey:
                      type: string
                      description: Secret key of s3.
                      default: null
                    regionendpoint:
                      type: string
                      description: Region endpoint of s3, eg http://myobjects.local
                      default: null
                    encrypt:
                      type: boolean
                      description: Encrypt for s3.
                      default: false
                    keyid:
                      type: string
                      description: Keyid of s3.
                      default: null
                    secure:
                      type: boolean
                      description: Secure for s3.
                      default: true
                    skipverify:
                      type: boolean
                      description: skipverify for s3.
                      default: false
                    v4auth:
                      type: boolean
                      description: Use v4auth for s3 when it's true.
                      default: true
                    chunksize:
                      type: integer
                      description: Check size for s3.
                      default: null
                    rootdirectory:
                      type: string
                      description: The rootdirectory in s3.
                      default: null
                    storageclass:
                      type: string
                      description: Storage class of s3.
                      default: STANDARD
                    multipartcopychunksize:
                      type: integer
                      description: multi part copy chunk size of s3.
                      default: null
                    multipartcopymaxconcurrency:
                      type: integer
                      description: multi part copy max concurrency of s3.
                      default: null
                    multipartcopythresholdsize:
                      type: integer
                      description: multi part copy threshold size of s3.
                      default: null
                swift:
                  type: object
                  description: Swift storage related configuration.
                  required:
                    - authurl
                    - username
                    - password
                    - container
                  properties:
                    authurl:
                      type: string
                      description: Auth url of swift.
                      default: https://storage.myprovider.com/v3/auth
                    username:
                      type: string
                      description: Username of swift.
                      default: username
                    password:
                      type: string
                      description: Password of swift.
                      default: password
                    container:
                      type: string
                      description: Container of swift.
                      default: containername
                    region:
                      type: string
                      description: Region of swift.
                      default: null
                    tenant:
                      type: string
                      description: Tenant of swift.
                      default: null
                    tenantid:
                      type: string
                      description: Tenant id of swift.
                      default: null
                    domain:
                      type: string
                      description: Domain of swift.
                      default: null
                    domainid:
                      type: string
                      description: Domain id of swift.
                      default: null
                    trustid:
                      type: string
                      description: Trust id of swift.
                      default: null
                    insecureskipverify:
                      type: boolean
                      description: Ignore the cert verify when it's true.
                      default: null
                    chunksize:
                      type: string
                      description: Check size of swift, eg 5M.
                      default: null
                    prefix:
                      type: string
                      description: Prefix path of swift.
                      default: null
                    secretkey:
                      type: string
                      description: Secret key of swift.
                      default: null
                    accesskey:
                      type: string
                      description: Access key of swift.
                      default: null
                    authversion:
                      type: string
                      description: Auth version of swift.
                      default: null
                    endpointtype:
                      type: string
                      description: Endpoint type of swift, eg public.
                      default: null
                    tempurlcontainerkey:
                      type: boolean
                      description: Use temp url container key of swift when it's true.
                      default: null
                    tempurlmethods:
                      type: string
                      description: Temp url methods of swift.
                      default: null
                oss:
                  type: object
                  description: OSS storage related configuration.
                  required:
                    - accesskeyid
                    - accesskeysecret
                    - region
                    - bucket
                  properties:
                    accesskeyid:
                      type: string
                      description: Access key id of oss.
                      default: accesskeyid
                    accesskeysecret:
                      type: string
                      description: Access key secert of oss.
                      default: accesskeysecret
                    region:
                      type: string
                      description: Region of oss.
                      default: regionname
                    bucket:
                      type: string
                      description: Bucket name of oss.
                      default: bucketname
                    endpoint:
                      type: string
                      description: Endpoint of oss.
                      default: null
                    internal:
                      type: boolean
                      description: Use the internal endpoint when it's true.
                      default: null
                    encrypt:
                      type: boolean
                      description: Encrypt of oss.
                      default: null
                    secure:
                      type: boolean
                      description: Secure of oss.
                      default: null
                    chunksize:
                      type: string
                      description: Chunk size for the oss, eg 10M.
                      default: null
                    rootdirectory:
                      type: string
                      description: The rootdirectory in oss.
                      default: null
        proxy:
          type: object
          description: The proxy related configuration.
          properties:
            httpProxy:
              type: string
              description: HTTP proxy URL.
              default: ""
            httpsProxy:
              type: string
              description: HTTPS proxy URL.
              default: ""
            noProxy:
              type: string
              description: Ignore proxy for the domains.
              default: 127.0.0.1,localhost,.local,.internal
        pspNames:
          type: string
          description: The PSP names used by Harbor pods. The names are separated by ','. 'null' means all PSP can be used.
          default: "null"
        metrics:
          type: object
          description: The metrics used by core, registry and exporter
          properties:
            enabled:
              type: boolean
              description: Enable the metrics when it's true
              default: false
            core:
              type: object
              description: The core component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            registry:
              type: object
              description: The registry component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            jobservice:
              type: object
              description: The jobservice component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            exporter:
              type: object
              description: The exporter component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
        network:
          type: object
          description: The network related configuration.
          properties:
            ipFamilies:
              type: array
              description: The array of network ipFamilies. Default [] is equivalent to have both ["IPv4","IPv6"]. Or you can choose one of ["IPv4"] or ["IPv6"]
              default: []
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/harbor@sha256:729399d4ccce00987cbf7cc83a260880d9022ca6b290935f491c78c9b8341990
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: harbor.community.tanzu.vmware.com.2.4.2
spec:
  refName: harbor.community.tanzu.vmware.com
  version: 2.4.2
  releasedAt: 2021-09-28T06:05:00Z
  releaseNotes: "harbor 2.4.2 https://github.com/goharbor/harbor/releases/tag/v2.4.2"
  licenses:
    - "Apache 2.0"
  valuesSchema:
    openAPIv3:
      title: harbor.community.tanzu.vmware.com.2.4.2 values schema
      required:
        - harborAdminPassword
        - secretKey
      properties:
        namespace:
          type: string
          description: The namespace to install Harbor.
          default: harbor
        hostname:
          type: string
          description: The FQDN for accessing Harbor admin UI and Registry service.
          default: harbor.yourdomain.com
        port:
          type: object
          description: Port related configuration.
          properties:
            https:
              type: integer
              description: The network port of the Envoy service in Contour or other Ingress Controller.
              default: 443
        logLevel:
          type: string
          description: The log level of core, exporter, jobservice, registry.
          default: info
          enum:
            - debug
            - info
            - warning
            - error
            - fatal
        tlsCertificate:
          type: object
          description: The tls certificate for the harbor FQDN.
          required:
            - tls.crt
            - tls.key
            - ca.crt
          properties:
            tls.crt:
              type: string
              description: The certificate. Note that tls.crt is a key and not nested.
            tls.key:
              type: string
              description: The private key. Note that tls.key is a key and not nested.
            ca.crt:
              type: string
              description: The certificate of CA, this enables the download, link on portal to download the certificate of CA. Note that ca.crt is a key and not nested.
        tlsCertificateSecretName:
          type: string
          description: The name of the secret if you want to use your own TLS certificate for harbor FQDN, which contains keys named "tls.crt" and "tls.key".
        enableContourHttpProxy:
          type: boolean
          description: Use contour http proxy instead of the ingress when it's true.
          default: true
        contourHttpProxy:
          type: object
          description: The timeout policy configuration for httpproxy.
          properties:
            timeout:
              type: string
              description: Timeout for receiving a response from the server after processing a request from client.
            idleTimeout:
              type: string
              description: Timeout for how long the proxy should wait while there is no activity during single request/response (for HTTP/1.1) or stream (for HTTP/2).
        harborAdminPassword:
          type: string
          description: The initial password of Harbor admin.
        secretKey:
          type: string
          description: The secret key used for encryption. Must be a string of 16 chars.
        database:
          type: object
          description: Database component related configuration.
          required:
            - password
          properties:
            password:
              type: string
              description: The initial password of the postgres database.
            shmSizeLimit:
              type: integer
              description: The initial value of shmSizeLimit
            maxIdleConns:
              type: integer
              description: The initial value of maxIdleConns
            maxOpenConns:
              type: integer
              description: The initial value of maxOpenConns
        exporter:
          type: object
          description: The configuration related to exporter.
          properties:
            cacheDuration:
              type: integer
              description: The initial value of cacheDuration.
        core:
          type: object
          description: Core component related configuration.
          required:
            - secret
            - xsrfKey
          properties:
            replicas:
              type: integer
              description: The replicas for the core component.
              default: 1
            secret:
              type: string
              description: Secret is used when core server communicates with other components.
            xsrfKey:
              type: string
              description: The XSRF key. Must be a string of 32 chars.
        jobservice:
          type: object
          description: Jobservice component related configuration.
          required:
            - secret
          properties:
            replicas:
              type: integer
              description: The replicas for the jobservice component.
              default: 1
            secret:
              type: string
              description: Secret is used when job service communicates with other components.
        registry:
          type: object
          description: Registry component related configuration.
          required:
            - secret
          properties:
            replicas:
              type: integer
              description: The replicas for the registry component.
              default: 1
            secret:
              type: string
              description: Secret is used to secure the upload state from client and registry storage backend.
        notary:
          type: object
          description: Notary component related configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to install Notary
              default: true
        trivy:
          type: object
          description: Trivy component related configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to install Trivy scanner.
              default: true
            replicas:
              type: integer
              description: The replicas for the trivy component.
              default: 1
            gitHubToken:
              type: string
              description: the GitHub access token to download Trivy DB.
              default: ""
            skipUpdate:
              type: boolean
              description: The flag to disable Trivy DB downloads from GitHub.
              default: false
            offlineScan:
              type: boolean
              description: The offlineScan option prevents Trivy from sending API requests to identify dependencies.
              default: false
            timeout:
              type: string
              description: The timeout set for trivy scanner, it should be a number followed by a letter like "h", "m", "s", or "ms", i.e. 1h, 5m, 60s, 1000ms.
              default: ""
        persistence:
          type: object
          description: |-
            The persistence is always enabled and a default StorageClass
            is needed in the k8s cluster to provision volumes dynamically.
            Specify another StorageClass in the "storageClass" or set "existingClaim"
            if you have already existing persistent volumes to use

            For storing images and charts, you can also use "azure", "gcs", "s3",
            "swift" or "oss". Set it in the "imageChartStorage" section
          properties:
            persistentVolumeClaim:
              type: object
              description: PersistentVolumeClaim related configuration.
              properties:
                registry:
                  type: object
                  description: PersistentVolumeClaim related configuration for registry component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 10Gi
                jobservice:
                  type: object
                  description: PersistentVolumeClaim related configuration for jobservice component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                database:
                  type: object
                  description: PersistentVolumeClaim related configuration for database component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                redis:
                  type: object
                  description: PersistentVolumeClaim related configuration for redis component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 1Gi
                trivy:
                  type: object
                  description: PersistentVolumeClaim related configuration for redis component.
                  properties:
                    existingClaim:
                      type: string
                      description: |-
                        Use the existing PVC which must be created manually before bound,
                        and specify the "subPath" if the PVC is shared with other components
                      default: ""
                    storageClass:
                      type: string
                      description: |-
                        Specify the "storageClass" used to provision the volume. Or the default
                        StorageClass will be used(the default).
                        Set it to "-" to disable dynamic provisioning
                      default: ""
                    subPath:
                      type: string
                      description: The "subPath" if the PVC is shared with other components.
                      default: ""
                    accessMode:
                      type: string
                      description: Access mode of the PVC.
                      default: ReadWriteOnce
                    size:
                      type: string
                      description: Size of the PVC.
                      default: 5Gi
            imageChartStorage:
              type: object
              description: |-
                Define which storage backend is used for registry and chartmuseum to store
                images and charts. Refer to
                https://github.com/docker/distribution/blob/master/docs/configuration.md#storage
                for the detail.
              properties:
                disableredirect:
                  type: boolean
                  description: |-
                    Specify whether to disable `redirect` for images and chart storage, for
                    backends which not supported it (such as using minio for `s3` storage type), please disable
                    it. To disable redirects, simply set `disableredirect` to `true` instead.
                    Refer to
                    https://github.com/docker/distribution/blob/master/docs/configuration.md#redirect
                    for the detail.
                  default: false
                caBundleSecretName:
                  type: string
                  description: |-
                    Specify the "caBundleSecretName" if the storage service uses a self-signed certificate.
                    The secret must contain keys named "ca.crt" which will be injected into the trust store
                    of registry's and chartmuseum's containers.
                  default: ""
                "type":
                  type: string
                  description: |-
                    Specify the type of storage: "filesystem", "azure", "gcs", "s3", "swift",
                    "oss" and fill the information needed in the corresponding section. The type
                    must be "filesystem" if you want to use persistent volumes for registry
                    and chartmuseum
                  default: filesystem
                filesystem:
                  type: object
                  description: Filesystem storage related configuration.
                  properties:
                    rootdirectory:
                      type: string
                      description: The rootdirectory in filesystem.
                      default: /storage
                    maxthreads:
                      type: integer
                      description: Max threads for filesystem.
                      default: 100
                azure:
                  type: object
                  description: Azure storage related configuration.
                  required:
                    - accountname
                    - accountkey
                    - container
                  properties:
                    accountname:
                      type: string
                      description: Account name of azure storage.
                      default: accountname
                    accountkey:
                      type: string
                      description: Account key of azure storage.
                      default: base64encodedaccountkey
                    container:
                      type: string
                      description: Container name of azure storage.
                      default: containername
                    realm:
                      type: string
                      description: Realm for azure storage.
                      default: core.windows.net
                gcs:
                  type: object
                  required:
                    - bucket
                    - encodedkey
                  properties:
                    bucket:
                      type: string
                      description: Bucket name of gcs.
                      default: bucketname
                    encodedkey:
                      type: string
                      description: The base64 encoded json file which contains the key
                      default: base64-encoded-json-key-file
                    rootdirectory:
                      type: string
                      description: The rootdirectory in gcs.
                      default: null
                    chunksize:
                      type: integer
                      description: Check size for gcs.
                      default: 5242880
                s3:
                  type: object
                  required:
                    - region
                    - bucket
                  properties:
                    region:
                      type: string
                      description: Region of s3.
                      default: us-west-1
                    bucket:
                      type: string
                      description: Bucket name of s3.
                      default: bucketname
                    accesskey:
                      type: string
                      description: Access key of s3.
                      default: null
                    secretkey:
                      type: string
                      description: Secret key of s3.
                      default: null
                    regionendpoint:
                      type: string
                      description: Region endpoint of s3, eg http://myobjects.local
                      default: null
                    encrypt:
                      type: boolean
                      description: Encrypt for s3.
                      default: false
                    keyid:
                      type: string
                      description: Keyid of s3.
                      default: null
                    secure:
                      type: boolean
                      description: Secure for s3.
                      default: true
                    skipverify:
                      type: boolean
                      description: skipverify for s3.
                      default: false
                    v4auth:
                      type: boolean
                      description: Use v4auth for s3 when it's true.
                      default: true
                    chunksize:
                      type: integer
                      description: Check size for s3.
                      default: null
                    rootdirectory:
                      type: string
                      description: The rootdirectory in s3.
                      default: null
                    storageclass:
                      type: string
                      description: Storage class of s3.
                      default: STANDARD
                    multipartcopychunksize:
                      type: integer
                      description: multi part copy chunk size of s3.
                      default: null
                    multipartcopymaxconcurrency:
                      type: integer
                      description: multi part copy max concurrency of s3.
                      default: null
                    multipartcopythresholdsize:
                      type: integer
                      description: multi part copy threshold size of s3.
                      default: null
                swift:
                  type: object
                  description: Swift storage related configuration.
                  required:
                    - authurl
                    - username
                    - password
                    - container
                  properties:
                    authurl:
                      type: string
                      description: Auth url of swift.
                      default: https://storage.myprovider.com/v3/auth
                    username:
                      type: string
                      description: Username of swift.
                      default: username
                    password:
                      type: string
                      description: Password of swift.
                      default: password
                    container:
                      type: string
                      description: Container of swift.
                      default: containername
                    region:
                      type: string
                      description: Region of swift.
                      default: null
                    tenant:
                      type: string
                      description: Tenant of swift.
                      default: null
                    tenantid:
                      type: string
                      description: Tenant id of swift.
                      default: null
                    domain:
                      type: string
                      description: Domain of swift.
                      default: null
                    domainid:
                      type: string
                      description: Domain id of swift.
                      default: null
                    trustid:
                      type: string
                      description: Trust id of swift.
                      default: null
                    insecureskipverify:
                      type: boolean
                      description: Ignore the cert verify when it's true.
                      default: null
                    chunksize:
                      type: string
                      description: Check size of swift, eg 5M.
                      default: null
                    prefix:
                      type: string
                      description: Prefix path of swift.
                      default: null
                    secretkey:
                      type: string
                      description: Secret key of swift.
                      default: null
                    accesskey:
                      type: string
                      description: Access key of swift.
                      default: null
                    authversion:
                      type: string
                      description: Auth version of swift.
                      default: null
                    endpointtype:
                      type: string
                      description: Endpoint type of swift, eg public.
                      default: null
                    tempurlcontainerkey:
                      type: boolean
                      description: Use temp url container key of swift when it's true.
                      default: null
                    tempurlmethods:
                      type: string
                      description: Temp url methods of swift.
                      default: null
                oss:
                  type: object
                  description: OSS storage related configuration.
                  required:
                    - accesskeyid
                    - accesskeysecret
                    - region
                    - bucket
                  properties:
                    accesskeyid:
                      type: string
                      description: Access key id of oss.
                      default: accesskeyid
                    accesskeysecret:
                      type: string
                      description: Access key secert of oss.
                      default: accesskeysecret
                    region:
                      type: string
                      description: Region of oss.
                      default: regionname
                    bucket:
                      type: string
                      description: Bucket name of oss.
                      default: bucketname
                    endpoint:
                      type: string
                      description: Endpoint of oss.
                      default: null
                    internal:
                      type: boolean
                      description: Use the internal endpoint when it's true.
                      default: null
                    encrypt:
                      type: boolean
                      description: Encrypt of oss.
                      default: null
                    secure:
                      type: boolean
                      description: Secure of oss.
                      default: null
                    chunksize:
                      type: string
                      description: Chunk size for the oss, eg 10M.
                      default: null
                    rootdirectory:
                      type: string
                      description: The rootdirectory in oss.
                      default: null
        proxy:
          type: object
          description: The proxy related configuration.
          properties:
            httpProxy:
              type: string
              description: HTTP proxy URL.
              default: ""
            httpsProxy:
              type: string
              description: HTTPS proxy URL.
              default: ""
            noProxy:
              type: string
              description: Ignore proxy for the domains.
              default: 127.0.0.1,localhost,.local,.internal
        pspNames:
          type: string
          description: The PSP names used by Harbor pods. The names are separated by ','. 'null' means all PSP can be used.
          default: "null"
        caBundleSecretName:
          type: string
          description: The custom ca bundle secret, the secret must contain key named "ca.crt", which will be injected into the trust store for core, jobservice, registry, trivy components
        metrics:
          type: object
          description: The metrics used by core, registry and exporter
          properties:
            enabled:
              type: boolean
              description: Enable the metrics when it's true
              default: false
            core:
              type: object
              description: The core component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            registry:
              type: object
              description: The registry component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            jobservice:
              type: object
              description: The jobservice component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
            exporter:
              type: object
              description: The exporter component related configuration.
              properties:
                path:
                  type: string
                  description: The path of the metrics.
                  default: /metrics
                port:
                  type: integer
                  description: The port of the metrics.
                  default: 8001
        network:
          type: object
          description: The network related configuration.
          properties:
            ipFamilies:
              type: array
              description: The array of network ipFamilies. Default [] is equivalent to have both ["IPv4","IPv6"]. Or you can choose one of ["IPv4"] or ["IPv6"]
              default: ["IPv4","IPv6"]
        trace:
          type: object
          description: The tracing configuration for Harbor.
          properties:
            enabled:
              type: boolean
              description: Enable tracing for Harbor.
              default: false
            provider:
              type: string
              description: The provider type of tracing, jaeger or otel.
              default: jaeger
            sample_rate:
              type: number
              description: Set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth.
              default: 1
            namespace:
              type: string
              description: The namespace used to differentiate different harbor services.
            attributes:
              type: object
              description: The attributes is a key value dict contains user defined attributes used to initialize trace provider.
            jaeger:
              type: object
              description: Jaeger provider for Harbor tracing, it support two modes - collector mode & agent mode.
              properties:
                endpoint:
                  type: string
                  description: The endpoint of jaeger.
                  default: http://hostname:14268/api/traces
                username:
                  type: string
                  description: The username of jaeger in collector mode.
                password:
                  type: string
                  description: The password of jaeger in collector mode.
                agent_host:
                  type: string
                  description: The agent_host of jaeger in agent mode.
                agent_port:
                  type: integer
                  description: The agent_port of jaeger in agent mode.
            otel:
              type: object
              description: Otel provider for Harbor tracing.
              properties:
                endpoint:
                  type: string
                  description: The endpoint of otel.
                  default: hostname:4318
                url_path:
                  type: string
                  description: The url path of tracing with Otel.
                  default: /v1/traces
                compression:
                  type: boolean
                  description: Whether to set compression when enabling tracing with Otel.
                  default: false
                insecure:
                  type: boolean
                  description: Whether to connect the collector insecurely.
                  default: true
                timeout:
                  type: integer
                  description: The max waiting time for the backend to process each spans batch, in seconds.
                  default: 10
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/harbor@sha256:67a71b2aa428bc04abd65c7ba2a75576bf240e69a48160dd0e31ae6eef35b7f3
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: local-path-storage.community.tanzu.vmware.com
spec:
  displayName: "local-path-storage"
  longDescription: "This package provides local path node storage and primarily supports RWO AccessMode."
  shortDescription: "This package provides local path node storage and primarily supports RWO AccessMode."
  providerName: VMware
  maintainers:
    - name: John McBride
    - name: Nicholas Seemiller
  categories:
    - "storage"
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: local-path-storage.community.tanzu.vmware.com.0.0.20
spec:
  refName: local-path-storage.community.tanzu.vmware.com
  version: 0.0.20
  releasedAt: 2021-09-15T00:00:00Z
  releaseNotes: "local-path-storage 0.0.20 https://github.com/rancher/local-path-provisioner/releases/tag/v0.0.20"
  capacityRequirementsDescription: "Only suitable for local node storage. Does not provide distributed, reliable storage"
  licenses:
    - "Apache 2.0"
  valuesSchema:
    openAPIv3:
      title: local-path-storage.community.tanzu.vmware.com.0.0.20 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy the local-path-storage package
          default: local-path-storage
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/local-path-storage@sha256:e0db08cc6e83efb1f772ab9714d78900b5634146c266954abc805461a005beb1
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: local-path-storage.community.tanzu.vmware.com.0.0.22
spec:
  refName: local-path-storage.community.tanzu.vmware.com
  version: 0.0.22
  releasedAt: 2021-09-15T00:00:00Z
  releaseNotes: "local-path-storage 0.0.22 https://github.com/rancher/local-path-provisioner/releases/tag/v0.0.22"
  capacityRequirementsDescription: "Only suitable for local node storage. Does not provide distributed, reliable storage"
  licenses:
    - "Apache 2.0"
  valuesSchema:
    openAPIv3:
      title: local-path-storage.community.tanzu.vmware.com.0.0.22 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy the local-path-storage package
          default: local-path-storage
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/local-path-storage@sha256:9c138c1e2bb54a2f9495b9ce3fc8cebba2afc46d0f296a93ff7ef9f7ae32373f
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: PackageMetadata
metadata:
  name: prometheus.community.tanzu.vmware.com
spec:
  displayName: "prometheus"
  iconSVGBase64: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHJvbGU9ImltZyIgdmlld0JveD0iLTMuOTQgLTEuNDQgNDM4LjYyIDQzMi44NyI+PHBhdGggZmlsbD0iI0U3NTIyNSIgZD0iTTIxNS45MjYgNy4wNjhjMTE1LjY4NC4wMjQgMjEwLjYzOCA5My43ODQgMjEwLjQ5MyAyMDcuODQ0LS4xNDggMTE1Ljc5My05NC43MTMgMjA4LjI1Mi0yMTIuOTEyIDIwOC4xNjlDOTcuOTUgNDIzIDQuNTIgMzI5LjE0MyA0LjYwMSAyMTMuMjIxIDQuNjggOTkuODY3IDk5LjgzMyA3LjA0NCAyMTUuOTI2IDcuMDY4em0tNjMuOTQ3IDczLjAwMWMyLjY1MiAxMi45NzguMDc2IDI1LjA4Mi0zLjg0NiAzNi45ODgtMi43MTYgOC4yNDQtNi40NyAxNi4xODMtOC43MTEgMjQuNTM5LTMuNjk0IDEzLjc2OS03Ljg4NSAyNy42MTktOS40MjIgNDEuNzAxLTIuMjEgMjAuMjUgNS43OTUgMzguMDg2IDE5LjQ5MyA1NS44MjJMODYuNTI3IDIyNS45NGMuMTEgMS45NzgtLjAwNyAyLjcyNy4yMSAzLjM2MSA1Ljk2OCAxNy40MyAxNi40NzEgMzIuMTE1IDI4LjI0MyA0NS45NTcgMS4yNDYgMS40NjUgNC4wODIgMi4yMTcgNi4xODIgMi4yMjEgNjIuNzgyLjExNSAxMjUuNTY1LjEwOSAxODguMzQ3LjAyOCAxLjk0OC0uMDAzIDQuNTQ2LS4zNjkgNS43NDEtMS42MTggMTMuNDU2LTE0LjA2MyAyMy43NDYtMzAuMDc5IDMwLjE3OS01MC4yNTdsLTY2LjY1OCAxMi45NzZjNC4zOTctOC41NjcgOS40MTctMTYuMSAxMi4zMDItMjQuMzc3IDkuODY5LTI4LjMxNSA1Ljc3OS01NS42OS04LjM4Ny04MS41MDktMTEuMzY4LTIwLjcyLTIxLjg1NC00MS4zNDktMTYuMTgzLTY2LjMyLTEyLjAwNSAxMS43ODYtMTYuNjE1IDI2Ljc5LTE5LjU0MSA0Mi4yNTMtMi44ODIgMTUuMjMtNC41OCAzMC42ODQtNi44MTEgNDYuMTM2LS4zMTctLjQ2Ny0uNzI4LS44MTEtLjc5Mi0xLjIxMi0uMjU4LTEuNjIxLS40OTktMy4yNTUtLjU4Ny00Ljg5My0xLjM1NS0yNS4zMS02LjMyOC00OS42OTYtMTYuODIzLTcyLjk4Ny02LjE3OC0xMy43MS0xMi45OS0yNy43MjctNi42MjItNDQuMDgxLTQuMzEgMi4yNTktOC4yMDUgNC41MDUtMTAuOTk3IDcuNzExLTguMzMzIDkuNTY5LTExLjc3OSAyMS4wNjItMTIuNjY2IDMzLjY0NS0uNzU3IDEwLjc1LTEuNzk2IDIxLjU1Mi0zLjgwMSAzMi4xMjMtMi4xMDcgMTEuMTA5LTUuNDQ4IDIxLjk5OC0xMi45NTYgMzIuMjA5LTMuMDMzLTIxLjgxLTMuMzctNDMuMzgtMjIuOTI4LTU3LjIzN3ptMTYxLjg3NyAyMTYuNTIzSDExNi45NDJ2MzQuMDA3aDE5Ni45MTR2LTM0LjAwN3ptLTE1Ny44NzEgNTEuNTc1Yy0uMTYzIDI4LjMxNyAyOC44NTEgNDkuNDE0IDY0LjcwOSA0Ny44ODMgMjkuNzE2LTEuMjY5IDU2LjAxNi0yNC41MSA1My43NTUtNDcuODgzSDE1NS45ODV6Ii8+PC9zdmc+
  longDescription: "A time series database for your metrics"
  shortDescription: "A time series database for your metrics"
  providerName: VMware
  maintainers:
    - name: Anil Kodali
    - name: John McBride
    - name: Luke Winikates
  categories:
    - "monitoring"
    - "observability"
  supportDescription: "The detailed documentation is on https://prometheus.io/. Support is available from VMware. Refer to the VMware Product Guide for specific support terms."
---
apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: prometheus.community.tanzu.vmware.com.2.27.0-1
spec:
  refName: prometheus.community.tanzu.vmware.com
  version: 2.27.0-1
  releasedAt: 2021-05-12T18:00:00Z
  releaseNotes: "prometheus 2.27.0-1 https://github.com/prometheus/prometheus/releases/tag/v2.27.0"
  capacityRequirementsDescription: "Varies significantly based on cluster size. A starting point is 16GB RAM and 4 CPU, but this should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: prometheus.community.tanzu.vmware.com.2.27.0 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which to deploy Prometheus.
          default: prometheus
        prometheus:
          type: object
          description: Prometheus Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: Prometheus Deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of prometheus replicas.
                  default: 1
                containers:
                  type: object
                  description: Prometheus server container configuration.
                  properties:
                    args:
                      type: array
                      description: List of arguments passed via command-line to prometheus server. For more guidance on configuration options consult the Prometheus docs at https://prometheus.io/
                      default: "prometheus storage retention time = 42d"
                      items:
                        type: string
                    resources:
                      type: object
                      description: Prometheus containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: Prometheus deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: Prometheus deployments pod labels
                  additionalProperties:
                    type: string
                configmapReload:
                  type: object
                  description: configmap-reload related configuration.
                  properties:
                    containers:
                      type: object
                      description: configmap-reload container configuration.
                      properties:
                        args:
                          type: array
                          description: List of arguments passed via command-line to configmap reload container. For more guidance on configuration options consult the configmap-reload docs at https://github.com/jimmidyson/configmap-reload#usage
                          default: "webhook-url=http://127.0.0.1:9090/-/reload"
                          items:
                            type: string
                        resources:
                          type: object
                          description: configmap-reload containers resource requirements (io.k8s.api.core.v1.ResourceRequirements)
                          additionalProperties: true
            service:
              type: object
              description: Prometheus service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Prometheus.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by Prometheus service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Prometheus pods.
                  default: 9090
                annotations:
                  type: object
                  description: Prometheus service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: Prometheus service pod labels
                  additionalProperties:
                    type: string
            pvc:
              type: object
              description: Prometheus's PVC configuration
              properties:
                annotations:
                  type: object
                  description: Prometheus's persistent volume claim annotations
                  additionalProperties:
                    type: string
                storageClassName:
                  type: string
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: null
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for Prometheus server persistent volume claim.
                  default: "150Gi"
            config:
              type: object
              description: Prometheus configuration.
              properties:
                prometheus_yml:
                  type: object
                  description: The contents of the Prometheus config file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/ for more information.
                  default: "See default values file"
                alerting_rules_yml:
                  type: object
                  description: The YAML contents of the Prometheus alerting rules file.
                  default: "See default values file"
                alerts_yml:
                  type: object
                  description: Additional prometheus alerts can be configured in this YAML file.
                  default: null
                recording_rules_yml:
                  type: object
                  description: The YAML contents of the Prometheus recording rules file.
                  default: "See default values file"
                rules_yml:
                  type: object
                  description: Additional prometheus rules can be configured in this YAML file.
                  default: null
        alertmanager:
          type: object
          description: Alertmanager Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: Alertmanager Deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of alertmanager replicas.
                  default: 1
                containers:
                  type: object
                  description: Alertmanager server container configuration.
                  properties:
                    resources:
                      type: object
                      description: Alertmanager containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: Alertmanager deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: Alertmanager deployments pod labels
                  additionalProperties:
                    type: string
            service:
              type: object
              description: Alertmanager service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Alertmanager.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by Alertmanager service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Alertmanager pods.
                  default: 9093
                annotations:
                  type: object
                  description: Alertmanager service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: Alertmanager service pod labels
                  additionalProperties:
                    type: string
            pvc:
              type: object
              description: Alertmanager's PVC configuration
              properties:
                annotations:
                  type: object
                  description: Alertmanager's persistent volume claim annotations
                  additionalProperties:
                    type: string
                storageClassName:
                  type: string
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: null
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for Alertmanager server persistent volume claim.
                  default: "2Gi"
            config:
              type: object
              description: Alertmanager configuration.
              properties:
                alertmanager_yml:
                  type: object
                  description: The contents of the Alertmanager config file. See https://prometheus.io/docs/alerting/latest/configuration/ for more information.
                  default: "See default values file"
        kube_state_metrics:
          type: object
          description: kube-state-metrics Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: kube-state-metrics deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of kube-state-metrics replicas.
                  default: 1
                containers:
                  type: object
                  description: kube-state-metrics container configuration.
                  properties:
                    resources:
                      type: object
                      description: kube-state-metrics containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: kube-state-metrics deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: kube-state-metrics deployments pod labels
                  additionalProperties:
                    type: string
            service:
              type: object
              description: kube-state-metrics service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for kube-state-metrics.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by kube-state-metrics service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the kube-state-metrics pods.
                  default: 8080
                telemetryPort:
                  type: integer
                  description: The ports that are exposed by kube-state-metrics service.
                  default: 81
                telemetryTargetPort:
                  type: integer
                  description: Target Port to access on the kube-state-metrics pods.
                  default: 8081
                annotations:
                  type: object
                  description: kube-state-metrics service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: kube-state-metrics service pod labels
                  additionalProperties:
                    type: string
        node_exporter:
          type: object
          description: node-exporter Kubernetes configuration.
          properties:
            daemonset:
              type: object
              description: node-exporter deployment related configuration
              properties:
                hostNetwork:
                  type: boolean
                  description: The Host networking requested for this pod
                  default: false
                updatestrategy:
                  type: string
                  description: The type of DaemonSet update.
                  default: RollingUpdate
                containers:
                  type: object
                  description: node-exporter container configuration.
                  properties:
                    resources:
                      type: object
                      description: node-exporter containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: node-exporter deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: node-exporter deployments pod labels
                  additionalProperties:
                    type: string
            service:
              type: object
              description: node-exporter service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for node-exporter.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by node-exporter service.
                  default: 9100
                targetPort:
                  type: integer
                  description: Target Port to access on the node-exporter pods.
                  default: 9100
                annotations:
                  type: object
                  description: node-exporter service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: node-exporter service pod labels
                  additionalProperties:
                    type: string
        pushgateway:
          type: object
          description: pushgateway Kubernetes configuration.
          properties:
            deployment:
              type: object
              description: pushgateway deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of pushgateway replicas.
                  default: 1
                containers:
                  type: object
                  description: pushgateway container configuration.
                  properties:
                    resources:
                      type: object
                      description: pushgateway containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: pushgateway deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: pushgateway deployments pod labels
                  additionalProperties:
                    type: string
            service:
              type: object
              description: pushgateway service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for pushgateway.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by pushgateway service.
                  default: 9091
                targetPort:
                  type: integer
                  description: Target Port to access on the pushgateway pods.
                  default: 9091
                annotations:
                  type: object
                  description: pushgateway service annotations
                  additionalProperties:
                    type: string
                labels:
                  type: object
                  description: pushgateway service pod labels
                  additionalProperties:
                    type: string
        cadvisor:
          type: object
          description: cadvisor Kubernetes configuration.
          properties:
            daemonset:
              type: object
              description: cadvisor deployment related configuration
              properties:
                updatestrategy:
                  type: string
                  description: The type of DaemonSet update.
                  default: RollingUpdate
                containers:
                  type: object
                  description: cadvisor container configuration.
                  properties:
                    resources:
                      type: object
                      description: cadvisor containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      additionalProperties: true
                podAnnotations:
                  type: object
                  description: cadvisor deployments pod annotations
                  additionalProperties:
                    type: string
                podLabels:
                  type: object
                  description: cadvisor deployments pod labels
                  additionalProperties:
                    type: string
        ingress:
          type: object
          description: Prometheus and Alertmanager Ingress configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to enable Prometheus and Alertmanager Ingress. Note that this requires contour.
              default: false
            virtual_host_fqdn:
              type: string
              description: Hostname for accessing prometheus and alertmanager.
              default: "prometheus.system.tanzu"
            prometheus_prefix:
              type: string
              description: Path prefix for Prometheus.
              default: "/"
            alertmanager_prefix:
              type: string
              description: Path prefix for Alertmanager.
              default: "/alertmanager/"
            prometheusServicePort:
              type: integer
              description: Prometheus service port to proxy traffic to.
              default: 80
            alertmanagerServicePort:
              type: integer
              description: Alertmanager service port to proxy traffic to.
              default: 80
            tlsCertificate:
              type: object
              description: Prometheus Ingress TLS certificate configuration. If skipped, a cert-manager cert will be issued and the cert-manager package must be installed on your cluster.
              properties:
                tls.crt:
                  type: string
                  description: Optional cert for ingress if you want to use your own TLS cert. A self signed cert is generated by default. Note that tls.crt is a key and not nested.
                  default: null
                tls.key:
                  type: string
                  description: Optional cert private key for ingress if you want to use your own TLS cert. Note that tls.key is a key and not nested.
                  default: null
                ca.crt:
                  type: string
                  description: Optional CA certificate. Note that ca.crt is a key and not nested.
                  default: null
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/prometheus@sha256:6f99e170b544291e2eab415b89aa215cb8cfbf53e60d5102b0d717e5c14ee1c1
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
